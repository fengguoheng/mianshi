{"version":3,"file":"js/486.03dfc2a5.js","mappings":"gKAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,MAAM,CAACE,YAAY,iBAAiBF,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACF,EAAG,QAAQ,CAACE,YAAY,aAAaC,MAAM,CAAC,IAAM,oBAAoB,CAACL,EAAIM,GAAG,gBAAgBJ,EAAG,QAAQ,CAACK,IAAI,aAAaF,MAAM,CAAC,GAAK,kBAAkB,KAAO,OAAO,OAAS,WAAWG,GAAG,CAAC,OAASR,EAAIS,gBAAgBP,EAAG,SAAS,CAACG,MAAM,CAAC,GAAK,YAAY,SAAWL,EAAIU,aAAaF,GAAG,CAAC,MAAQR,EAAIW,eAAe,CAACX,EAAIM,GAAG,IAAIN,EAAIY,GAAGZ,EAAIU,YAAc,SAAW,UAAU,SAAUV,EAAIa,WAAYX,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,KAAK,CAACE,YAAY,iBAAiB,CAACJ,EAAIM,GAAG,YAAYJ,EAAG,MAAM,CAACE,YAAY,qBAAqB,CAACF,EAAG,MAAM,CAACE,YAAY,gBAAgBC,MAAM,CAAC,IAAML,EAAIa,WAAW,IAAM,iBAAiBb,EAAIc,KAAKZ,EAAG,MAAM,CAACa,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOlB,EAAImB,aAAcC,WAAW,iBAAiBhB,YAAY,YAAY,CAACJ,EAAIM,GAAGN,EAAIY,GAAGZ,EAAIqB,iBAAiBnB,EAAG,MAAM,CAACa,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOlB,EAAIsB,WAAYF,WAAW,eAAehB,YAAY,UAAU,CAACJ,EAAIuB,GAAG,GAAGvB,EAAIuB,GAAG,GAAGrB,EAAG,MAAM,CAACE,YAAY,sBAAsB,CAACF,EAAG,KAAK,CAACE,YAAY,kBAAkB,CAACJ,EAAIM,GAAG,eAAeJ,EAAG,MAAM,CAACE,YAAY,mBAAmBoB,SAAS,CAAC,UAAYxB,EAAIY,GAAGZ,EAAIyB,mBAAmBvB,EAAG,MAAM,CAACE,YAAY,oBAAoBoB,SAAS,CAAC,UAAYxB,EAAIY,GAAGZ,EAAI0B,oBACr6C,EACIC,EAAkB,CAAC,WAAY,IAAI3B,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,KAAK,CAACF,EAAIM,GAAG,eAAeJ,EAAG,IAAI,CAACE,YAAY,mBAAmB,CAACJ,EAAIM,GAAG,sBAC7L,EAAE,WAAY,IAAIN,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,KAAK,CAACE,YAAY,eAAe,CAACJ,EAAIM,GAAG,WAAWJ,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,SAAS,CAACG,MAAM,CAAC,GAAK,aAAa,MAAQ,MAAM,OAAS,YAC9P,G,oDCsDA,GACAuB,IAAAA,GACA,OACAC,YAAA,YACAC,SAAAC,aAAAC,QAAA,kBACAtB,aAAA,EACAS,cAAA,EACAG,YAAA,EACAD,aAAA,GACAY,cAAA,GACAP,WAAA,GACAD,aAAA,GACAZ,WAAA,GACAqB,WAAA,KAEAC,UAAA,CACAC,SAAA,EACAC,QAAA,EACAC,SAAA,EACAC,SAAA,EACAC,cAAA,GAGA,EACAC,QAAA,CACAC,YAAAA,CAAAC,GACA,KAAAd,YAAAc,EACAC,QAAAC,IAAA,QAAAF,GACA,SAAAA,GAEA,SAAAA,GACAZ,aAAAe,WAAA,QAGA,EAEArC,YAAAA,CAAAsC,GACA,MAAAC,EAAAD,EAAAE,OAAAC,MAAA,GACA,GAAAF,EAAA,CAEA,IAAAA,EAAAG,KAAAC,MAAA,WAEA,YADAC,MAAA,WAKA,MAAAC,EAAA,IAAAC,WACAD,EAAAE,OAAAT,IACA,KAAAlC,WAAAkC,EAAAE,OAAAQ,MAAA,EAEAH,EAAAI,cAAAV,EACA,CACA,EACA,kBAAArC,GACA,MAAAqC,EAAA,KAAAW,MAAAC,WAAAV,MAAA,GACA,GAAAF,EAAA,CAKA,KAAAtC,aAAA,EACA,KAAAS,cAAA,EACA,KAAAE,aAAA,gBAEA,IACA,MAAAwC,QAAA,KAAAC,oBAAAd,GAGAe,EAAAhC,aAAAC,QAAA,qBAGAgC,EAAA,YAAAD,gTAcAA,iBAGAE,QAAAC,MAAA,gDACAC,OAAA,OACAC,QAAA,yEACAC,KAAAC,KAAAC,UAAA,CAAAC,aAAAX,EAAAG,SAAAA,MAGApC,QAAAqC,EAAAQ,OAEA,eAAA7C,EAAA8C,cACA,KAAAC,WAAA/C,EAAAgD,WAEA,OAAAC,GACAjC,QAAAiC,MAAA,QAAAA,GACA,KAAAxD,aAAA,QAAAwD,EAAAC,OACA,SACA,KAAApE,aAAA,EACA,KAAAS,cAAA,CACA,CA/CA,MAFAkC,MAAA,QAkDA,EAEA,gBAAAsB,CAAAI,GACA,IACA,SACA,MAAAC,QAAAd,MAAA,uCAAAa,KACAtB,QAAAuB,EAAAP,OAEA,iBAAAhB,EAAAiB,OAeA,OAdA,KAAAzC,cAAAwB,EAAAwB,SAAA,OACA,KAAAvD,WAAA,KAAAwD,oBAAA,KAAAjD,eACA,KAAAX,YAAA,EAGA,KAAA6D,qBACA,KAAAC,mBAGA,KAAAC,mBAGAtD,aAAAuD,QAAA,gBAAArD,oBACA,KAAAsD,aAEA,cAAA9B,EAAAiB,OAGA,OAFA,KAAAhD,WAAA,SAAA+B,EAAAoB,OAAA,aACA,KAAAvD,YAAA,SAIA,IAAAkE,SAAAC,GAAAC,WAAAD,EAAA,OACA,KAAApE,aAAA,YACA,CACA,OAAAwD,GACAjC,QAAAiC,MAAA,QAAAA,GACA,KAAAnD,WAAA,QAAAmD,EAAAC,QACA,KAAAxD,YAAA,CACA,CACA,EAEAwC,mBAAAA,CAAAd,GACA,WAAAwC,SAAA,CAAAC,EAAAE,KACA,MAAArC,EAAA,IAAAC,WACAD,EAAAE,OAAAT,GAAA0C,EAAA1C,EAAAE,OAAAQ,OAAAmC,MAAA,SACAtC,EAAAuC,QAAAhB,GAAAc,EAAAd,GACAvB,EAAAI,cAAAV,EAAA,GAEA,EAEAkC,mBAAAA,CAAAY,GACA,IAAAA,EAAA,SAEA,IAAAC,EAAAD,EACAE,QAAA,gCACAA,QAAA,iCACAA,QAAA,mCACAJ,MAAA,QAAAK,KAAAC,GACAA,EAAAC,OAAAC,WAAA,SAAAF,EAAAC,OAAAC,WAAA,QACAF,EAEA,MAAAA,EAAAC,eACAE,KAAA,IAEA,qDAAAN,SACA,EAGAZ,kBAAAA,GACA,IAEA,UAAAmB,KAAA,KAAAnE,UACA,KAAAA,UAAAmE,GAAA,EAIA,MAAArB,EAAA,KAAAhD,cAAAsE,cAGAtB,EAAAuB,SAAA,YACA,KAAArE,UAAA,eAAAsE,eAAAxB,EAAA,WAEAA,EAAAuB,SAAA,WACA,KAAArE,UAAA,cAAAsE,eAAAxB,EAAA,UAEAA,EAAAuB,SAAA,YACA,KAAArE,UAAA,eAAAsE,eAAAxB,EAAA,WAEAA,EAAAuB,SAAA,YACA,KAAArE,UAAA,eAAAsE,eAAAxB,EAAA,WAEAA,EAAAuB,SAAA,iBACA,KAAArE,UAAA,oBAAAsE,eAAAxB,EAAA,gBAGArC,QAAAC,IAAA,gBAAAV,UACA,OAAA0C,GACAjC,QAAAiC,MAAA,aAAAA,EACA,CACA,EAGA4B,cAAAA,CAAAxB,EAAAyB,GAEA,GAAAzB,EAAAuB,SAAA,GAAAE,QAAAzB,EAAAuB,SAAA,GAAAE,QAAA,UACA,GAAAzB,EAAAuB,SAAA,GAAAE,QAAAzB,EAAAuB,SAAA,GAAAE,QAAA,UACA,GAAAzB,EAAAuB,SAAA,GAAAE,QAAAzB,EAAAuB,SAAA,GAAAE,QAAA,UACA,GAAAzB,EAAAuB,SAAA,GAAAE,QAAAzB,EAAAuB,SAAA,GAAAE,QAAA,UAGA,MAAAC,EAAA1B,EAAAW,MAAAc,GAAA,OACAE,EAAA,oDACAC,EAAA,oCAEA,IAAAC,EAAA,GAQA,OAPAF,EAAAG,SAAAC,IACAL,EAAAH,SAAAQ,KAAAF,GAAA,MAEAD,EAAAE,SAAAC,IACAL,EAAAH,SAAAQ,KAAAF,GAAA,MAGAG,KAAAC,IAAA,EAAAD,KAAAE,IAAA,IAAAL,GACA,EAGA1B,gBAAAA,GACA,IACA,MAAAgC,EAAAC,SAAAC,eAAA,cAAAC,WAAA,MAGA,KAAArF,YACA,KAAAA,WAAAsF,UAIA,MAAAC,EAAAC,OAAAC,KAAA,KAAAxF,WACAP,EAAA8F,OAAAE,OAAA,KAAAzF,WAGA,KAAAD,WAAA,IAAA2F,EAAAA,GAAAT,EAAA,CACAjE,KAAA,QACAvB,KAAA,CACA6F,OAAAA,EACAK,SAAA,EACAC,MAAA,OACAnG,KAAAA,EACAoG,gBAAA,0BACAC,YAAA,wBACAC,qBAAA,wBACAC,iBAAA,OACAC,0BAAA,OACAC,sBAAA,2BAGAC,QAAA,CACAC,YAAA,EACAC,qBAAA,EACAC,OAAA,CACAC,EAAA,CACAC,WAAA,CACAC,SAAA,GAEAC,aAAA,EACAC,aAAA,MAGAC,QAAA,CACAC,OAAA,CACAC,SAAA,OAEAC,QAAA,CACAC,UAAA,CACApB,MAAA,SAAAqB,GACA,SAAAA,EAAArB,UAAAqB,EAAAC,MACA,OAMA,OAAAxE,GACAjC,QAAAiC,MAAA,YAAAA,EACA,CACA,EAGAQ,gBAAAA,GACA,IACA,MAAAJ,EAAA,KAAAhD,cAGAqH,EAAA,oDACAC,EAAA,GACA,IAAAnG,EAEA,cAAAA,EAAAkG,EAAAE,KAAAvE,IACAsE,EAAAE,KAAA,CACAC,MAAAtG,EAAA,GACAuG,SAAAvG,EAAA,KAKA,MAAAwG,EAAA,oCACAC,EAAAD,EAAAJ,KAAAvE,GACA6E,EAAAD,EAAAA,EAAA,GAAA1D,OAAA,GAGA4D,EAAA,+BACAC,EAAAD,EAAAP,KAAAvE,GACAgF,EAAAD,EAAAA,EAAA,GAAA7D,OAAA,GAGA+D,EAAA,GACAC,EAAA,yCAEAZ,EAAAxC,SAAAL,IACAyD,EAAApD,SAAAqD,IACA,MAAAC,EAAA,IAAAC,OAAA,OAAAF,YAAA,KACA,IAAAG,EAEA,cAAAA,EAAAF,EAAAb,KAAA9C,EAAAiD,WACAO,EAAAT,KAAA,CACA/C,UAAAA,EAAAgD,MACAc,MAAAD,EAAA,GAAApE,QAEA,GACA,IAIA,IAAA1E,EAAA,iCAkBA,GAhBAqI,IACArI,GAAA,sCACAA,GAAA,8BAAAqI,SAGAI,EAAAO,OAAA,IACAhJ,GAAA,qCACAA,GAAA,2BAEAyI,EAAAnD,SAAAyD,IACA/I,GAAA,qCAAA+I,EAAA9D,oBAAA8D,EAAAA,YAAA,IAGA/I,GAAA,SAGAwI,EAIA,GAHAxI,GAAA,0CAGAwI,EAAAzD,SAAA,MAAAyD,EAAAzD,SAAA,MACA,MAAAkE,EAAAT,EAAArE,MAAA,QAAA+E,QAAAC,GAAA,KAAAA,EAAAzE,SACA1E,GAAA,gCAEAiJ,EAAA3D,SAAA6D,IACAnJ,GAAA,OAAAmJ,EAAAzE,aAAA,IAGA1E,GAAA,OACA,MACAA,GAAA,kCAAAwI,QAIAxI,GAAA,SAEA,KAAAA,aAAAA,EACAmB,QAAAC,IAAA,kBAAApB,aACA,OAAAoD,GACAjC,QAAAiC,MAAA,aAAAA,GACA,KAAApD,aAAA,6BACA,CACA,EAEA8D,UAAAA,GACA,KAAAsF,QAAApB,KAAA,SACA,GAEAqB,aAAAA,GAEA,KAAA5I,YACA,KAAAA,WAAAsF,SAEA,GClcuP,I,UCQnPuD,GAAY,OACd,EACAhL,EACA4B,GACA,EACA,KACA,WACA,MAIF,EAAeoJ,EAAiB,O,qCCjBhClD,EAAAA,GAAMmD,YAAYC,EAAAA,IAGlB,KAAepD,EAAK,E","sources":["webpack://avatarvue2/./src/views/提交简历生成问题.vue","webpack://avatarvue2/src/views/提交简历生成问题.vue","webpack://avatarvue2/./src/views/提交简历生成问题.vue?b450","webpack://avatarvue2/./src/views/提交简历生成问题.vue?caae","webpack://avatarvue2/./node_modules/chart.js/auto/auto.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"nav-container\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"button-group\"}),_c('div',{staticClass:\"image-upload\"},[_c('label',{staticClass:\"file-label\",attrs:{\"for\":\"customFileInput\"}},[_vm._v(\"请从本地上传您的简历\")]),_c('input',{ref:\"imageInput\",attrs:{\"id\":\"customFileInput\",\"type\":\"file\",\"accept\":\"image/*\"},on:{\"change\":_vm.previewImage}}),_c('button',{attrs:{\"id\":\"submitBtn\",\"disabled\":_vm.isUploading},on:{\"click\":_vm.handleUpload}},[_vm._v(\" \"+_vm._s(_vm.isUploading ? '分析中...' : '进行简历分析')+\" \")])]),(_vm.previewUrl)?_c('div',{staticClass:\"image-preview\"},[_c('h3',{staticClass:\"preview-title\"},[_vm._v(\"简历图片预览\")]),_c('div',{staticClass:\"preview-container\"},[_c('img',{staticClass:\"preview-image\",attrs:{\"src\":_vm.previewUrl,\"alt\":\"上传的简历图片\"}})])]):_vm._e(),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showProgress),expression:\"showProgress\"}],staticClass:\"progress\"},[_vm._v(_vm._s(_vm.progressText))]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showResult),expression:\"showResult\"}],staticClass:\"result\"},[_vm._m(0),_vm._m(1),_c('div',{staticClass:\"feedback-container\"},[_c('h3',{staticClass:\"feedback-title\"},[_vm._v(\"关键问题与改进建议\")]),_c('div',{staticClass:\"feedback-content\",domProps:{\"innerHTML\":_vm._s(_vm.feedbackHtml)}})]),_c('div',{staticClass:\"original-analysis\",domProps:{\"innerHTML\":_vm._s(_vm.answerHtml)}})])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"result-header\"},[_c('h2',[_vm._v(\"面试者能力评估报告\")]),_c('p',{staticClass:\"result-subtitle\"},[_vm._v(\"基于简历分析生成的能力评测反馈\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"radar-chart-container\"},[_c('h3',{staticClass:\"chart-title\"},[_vm._v(\"能力雷达图\")]),_c('div',{staticClass:\"chart-wrapper\"},[_c('canvas',{attrs:{\"id\":\"radarChart\",\"width\":\"400\",\"height\":\"300\"}})])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"nav-container\">\r\n\r\n        <div class=\"container\">\r\n            <div class=\"button-group\">\r\n\r\n            </div>\r\n\r\n            <div class=\"image-upload\">\r\n                <!-- 自定义文件选择标签，显示\"请从本地上传您的简历\" -->\r\n                <label for=\"customFileInput\" class=\"file-label\">请从本地上传您的简历</label>\r\n                <input id=\"customFileInput\" type=\"file\" ref=\"imageInput\" accept=\"image/*\" @change=\"previewImage\">\r\n                <button @click=\"handleUpload\" id=\"submitBtn\" :disabled=\"isUploading\">\r\n                    {{ isUploading ? '分析中...' : '进行简历分析' }}\r\n                </button>\r\n            </div>\r\n\r\n            <!-- 图片预览区域 -->\r\n            <div v-if=\"previewUrl\" class=\"image-preview\">\r\n                <h3 class=\"preview-title\">简历图片预览</h3>\r\n                <div class=\"preview-container\">\r\n                    <img :src=\"previewUrl\" alt=\"上传的简历图片\" class=\"preview-image\">\r\n                </div>\r\n            </div>\r\n\r\n            <div v-show=\"showProgress\" class=\"progress\">{{ progressText }}</div>\r\n\r\n            <!-- 可视化评测反馈报告区域 -->\r\n            <div class=\"result\" v-show=\"showResult\">\r\n                <div class=\"result-header\">\r\n                    <h2>面试者能力评估报告</h2>\r\n                    <p class=\"result-subtitle\">基于简历分析生成的能力评测反馈</p>\r\n                </div>\r\n\r\n                <!-- 雷达图区域 -->\r\n                <div class=\"radar-chart-container\">\r\n                    <h3 class=\"chart-title\">能力雷达图</h3>\r\n                    <div class=\"chart-wrapper\">\r\n                        <canvas id=\"radarChart\" width=\"400\" height=\"300\"></canvas>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- 关键问题与改进建议区域 -->\r\n                <div class=\"feedback-container\">\r\n                    <h3 class=\"feedback-title\">关键问题与改进建议</h3>\r\n                    <div v-html=\"feedbackHtml\" class=\"feedback-content\"></div>\r\n                </div>\r\n\r\n                <!-- 原分析结果 -->\r\n                <div v-html=\"answerHtml\" class=\"original-analysis\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            activeIndex: 'interview',\r\n            username: localStorage.getItem('username') || '用户',\r\n            isUploading: false,\r\n            showProgress: false,\r\n            showResult: false,\r\n            progressText: '',\r\n            answerContent: '',\r\n            answerHtml: '',\r\n            feedbackHtml: '',\r\n            previewUrl: '',\r\n            radarChart: null,\r\n            // 能力评估数据\r\n            skillData: {\r\n                专业知识水平: 0,\r\n                技能匹配度: 0,\r\n                语言表达能力: 0,\r\n                逻辑思维能力: 0,\r\n                创新能力与应变抗压能力: 0\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        handleSelect(index) {\r\n            this.activeIndex = index;\r\n            console.log('当前选中：', index);\r\n            if (index === 'home') {\r\n                // 跳转逻辑\r\n            } else if (index === 'exit') {\r\n                localStorage.removeItem('token');\r\n                // 跳转逻辑\r\n            }\r\n        },\r\n        // 图片预览函数\r\n        previewImage(e) {\r\n            const file = e.target.files[0];\r\n            if (file) {\r\n                // 检查是否为图片文件\r\n                if (!file.type.match('image.*')) {\r\n                    alert('请选择图片文件');\r\n                    return;\r\n                }\r\n\r\n                // 创建图片预览URL\r\n                const reader = new FileReader();\r\n                reader.onload = (e) => {\r\n                    this.previewUrl = e.target.result;\r\n                }\r\n                reader.readAsDataURL(file);\r\n            }\r\n        },\r\n        async handleUpload() {\r\n            const file = this.$refs.imageInput.files[0];\r\n            if (!file) {\r\n                alert('请选择图片');\r\n                return;\r\n            }\r\n\r\n            this.isUploading = true;\r\n            this.showProgress = true;\r\n            this.progressText = '正在分析简历，请稍候...';\r\n\r\n            try {\r\n                const imageBase64 = await this.convertFileToBase64(file);\r\n\r\n                // 从localStorage获取career值\r\n                const selectedCareer = localStorage.getItem('career') || '人工智能技术岗';\r\n\r\n\r\n                const question = `请基于以下要求，为${selectedCareer}岗位生成10道专业选择题：\r\n\r\n1. 题型：单项选择题（每题有A、B、C、D四个选项，且只有一个正确答案）\r\n2. 难度：中等偏上，覆盖该领域核心知识和技能\r\n3. 内容：\r\n   - 专业理论知识（4题）\r\n   - 技术应用与实践（4题）\r\n   - 行业前沿与趋势（2题）\r\n4. 格式：\r\n   - 每题以\"Q1:\"、\"Q2:\"等序号开头\r\n   - 问题与选项之间用空行分隔\r\n   - 选项格式为\"A. [选项内容]\"、\"B. [选项内容]\"等\r\n   - 答案放在最后，格式为\"答案：Q1: [正确选项]，Q2: [正确选项]...\"\r\n\r\n请确保题目专业、准确，能够有效评估面试者在${selectedCareer}领域的专业能力和知识储备。`;\r\n                // 发送分析请求\r\n                //const question = '提取文字';\r\n                const analysisResponse = await fetch('https://117.72.49.76:443/image-understanding', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json', 'ngrok-skip-browser-warning': '69420' },\r\n                    body: JSON.stringify({ image_base64: imageBase64, question: question })\r\n                });\r\n\r\n                const data = await analysisResponse.json();\r\n\r\n                if (data.status === 'processing') {\r\n                    await this.pollResult(data.request_id);\r\n                }\r\n            } catch (error) {\r\n                console.error('上传失败:', error);\r\n                this.progressText = '网络错误：' + error.message;\r\n            } finally {\r\n                this.isUploading = false;\r\n                this.showProgress = false;\r\n            }\r\n        },\r\n\r\n        async pollResult(requestId) {\r\n            try {\r\n                while (true) {\r\n                    const resultResponse = await fetch(`https://117.72.49.76:443/get-result/${requestId}`);\r\n                    const result = await resultResponse.json();\r\n\r\n                    if (result.status === 'completed') {\r\n                        this.answerContent = result.content || '暂无结果';\r\n                        this.answerHtml = this.parseMarkdownToHtml(this.answerContent);\r\n                        this.showResult = true;\r\n\r\n                        // 从分析结果中提取评分并生成雷达图\r\n                        this.extractSkillScores();\r\n                        this.createRadarChart();\r\n\r\n                        // 从分析结果中提取关键问题和改进建议\r\n                        this.generateFeedback();\r\n\r\n                        // 存储题目到localStorage\r\n                        localStorage.setItem('question', this.answerContent);\r\n                        this.jumpToTest();\r\n                        return;\r\n                    } else if (result.status === 'failed') {\r\n                        this.answerHtml = '分析失败：' + (result.error || '未知错误');\r\n                        this.showResult = true;\r\n                        return;\r\n                    }\r\n\r\n                    await new Promise(resolve => setTimeout(resolve, 3000));\r\n                    this.progressText = '分析中，请稍候...';\r\n                }\r\n            } catch (error) {\r\n                console.error('轮询失败:', error);\r\n                this.answerHtml = '网络错误：' + error.message;\r\n                this.showResult = true;\r\n            }\r\n        },\r\n\r\n        convertFileToBase64(file) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = (e) => resolve(e.target.result.split(',')[1]);\r\n                reader.onerror = (error) => reject(error);\r\n                reader.readAsDataURL(file);\r\n            });\r\n        },\r\n\r\n        parseMarkdownToHtml(markdown) {\r\n            if (!markdown) return '';\r\n\r\n            let html = markdown\r\n                .replace(/\\*\\*(.*?)\\*\\*/g, '<h3>$1</h3>')\r\n                .replace(/^\\s*-\\s+(.*)$/gm, '<li>$1</li>')\r\n                .replace(/(<li>.*?<\\/li>)/gs, '<ul>$1</ul>')\r\n                .split('\\n\\n').map(paragraph => {\r\n                    if (paragraph.trim().startsWith('<h3>') || paragraph.trim().startsWith('<ul>')) {\r\n                        return paragraph;\r\n                    }\r\n                    return `<p>${paragraph.trim()}</p>`;\r\n                }).join('');\r\n\r\n            return `<div class=\"answer-content\"><h2>面试者能力评估</h2>${html}</div>`;\r\n        },\r\n\r\n        // 从分析结果中提取技能评分\r\n        extractSkillScores() {\r\n            try {\r\n                // 重置评分\r\n                for (const key in this.skillData) {\r\n                    this.skillData[key] = 0;\r\n                }\r\n\r\n                // 简单的评分提取逻辑（实际应用中可能需要更复杂的正则表达式或NLP处理）\r\n                const content = this.answerContent.toLowerCase();\r\n\r\n                // 模拟评分提取（实际项目中需要根据大模型返回的实际格式调整）\r\n                if (content.includes('专业知识水平')) {\r\n                    this.skillData['专业知识水平'] = this.calculateScore(content, '专业知识水平');\r\n                }\r\n                if (content.includes('技能匹配度')) {\r\n                    this.skillData['技能匹配度'] = this.calculateScore(content, '技能匹配度');\r\n                }\r\n                if (content.includes('语言表达能力')) {\r\n                    this.skillData['语言表达能力'] = this.calculateScore(content, '语言表达能力');\r\n                }\r\n                if (content.includes('逻辑思维能力')) {\r\n                    this.skillData['逻辑思维能力'] = this.calculateScore(content, '逻辑思维能力');\r\n                }\r\n                if (content.includes('创新能力与应变抗压能力')) {\r\n                    this.skillData['创新能力与应变抗压能力'] = this.calculateScore(content, '创新能力与应变抗压能力');\r\n                }\r\n\r\n                console.log('提取的技能评分:', this.skillData);\r\n            } catch (error) {\r\n                console.error('提取技能评分时出错:', error);\r\n            }\r\n        },\r\n\r\n        // 计算特定维度的评分（简化版）\r\n        calculateScore(content, dimension) {\r\n            // 简单的评分算法，实际应用中需要更复杂的逻辑\r\n            if (content.includes(`${dimension}：优`) || content.includes(`${dimension}：优秀`)) return 85;\r\n            if (content.includes(`${dimension}：良`) || content.includes(`${dimension}：良好`)) return 75;\r\n            if (content.includes(`${dimension}：中`) || content.includes(`${dimension}：一般`)) return 65;\r\n            if (content.includes(`${dimension}：差`) || content.includes(`${dimension}：较差`)) return 55;\r\n\r\n            // 如果没有明确评分，根据内容长度和正面词汇出现频率估算\r\n            const dimensionText = content.split(dimension)[1] || '';\r\n            const positiveWords = ['强', '丰富', '扎实', '熟练', '清晰', '有条理', '优秀', '良好', '出色', '突出'];\r\n            const negativeWords = ['不足', '欠缺', '薄弱', '不够', '有待提高', '需要加强'];\r\n\r\n            let score = 50; // 基础分\r\n            positiveWords.forEach(word => {\r\n                if (dimensionText.includes(word)) score += 5;\r\n            });\r\n            negativeWords.forEach(word => {\r\n                if (dimensionText.includes(word)) score -= 5;\r\n            });\r\n\r\n            return Math.max(0, Math.min(100, score)); // 确保分数在0-100之间\r\n        },\r\n\r\n        // 创建雷达图\r\n        createRadarChart() {\r\n            try {\r\n                const ctx = document.getElementById('radarChart').getContext('2d');\r\n\r\n                // 如果已有图表，先销毁\r\n                if (this.radarChart) {\r\n                    this.radarChart.destroy();\r\n                }\r\n\r\n                // 准备数据\r\n                const labels = Object.keys(this.skillData);\r\n                const data = Object.values(this.skillData);\r\n\r\n                // 创建图表\r\n                this.radarChart = new Chart(ctx, {\r\n                    type: 'radar',\r\n                    data: {\r\n                        labels: labels,\r\n                        datasets: [{\r\n                            label: '能力评分',\r\n                            data: data,\r\n                            backgroundColor: 'rgba(59, 130, 246, 0.2)',\r\n                            borderColor: 'rgba(59, 130, 246, 1)',\r\n                            pointBackgroundColor: 'rgba(59, 130, 246, 1)',\r\n                            pointBorderColor: '#fff',\r\n                            pointHoverBackgroundColor: '#fff',\r\n                            pointHoverBorderColor: 'rgba(59, 130, 246, 1)'\r\n                        }]\r\n                    },\r\n                    options: {\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        scales: {\r\n                            r: {\r\n                                angleLines: {\r\n                                    display: true\r\n                                },\r\n                                suggestedMin: 0,\r\n                                suggestedMax: 100\r\n                            }\r\n                        },\r\n                        plugins: {\r\n                            legend: {\r\n                                position: 'top',\r\n                            },\r\n                            tooltip: {\r\n                                callbacks: {\r\n                                    label: function (context) {\r\n                                        return `${context.label}: ${context.raw}分`;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                console.error('创建雷达图时出错:', error);\r\n            }\r\n        },\r\n\r\n        // 从分析结果中提取关键问题和改进建议\r\n        generateFeedback() {\r\n            try {\r\n                const content = this.answerContent;\r\n\r\n                // 提取各维度分析结果\r\n                const dimensionRegex = /(\\d+)\\.\\s*(.*?)\\s*：([\\s\\S]*?)(?=\\d+\\.\\s*|综合评价|$)/g;\r\n                const dimensions = [];\r\n                let match;\r\n\r\n                while ((match = dimensionRegex.exec(content)) !== null) {\r\n                    dimensions.push({\r\n                        title: match[2],\r\n                        analysis: match[3]\r\n                    });\r\n                }\r\n\r\n                // 提取综合评价\r\n                const overallRegex = /综合评价[\\s\\S]*?：([\\s\\S]*?)(?=面试建议|$)/;\r\n                const overallMatch = overallRegex.exec(content);\r\n                const overallAnalysis = overallMatch ? overallMatch[1].trim() : '';\r\n\r\n                // 提取面试建议\r\n                const suggestionsRegex = /面试建议[\\s\\S]*?：([\\s\\S]*?)(?=$)/;\r\n                const suggestionsMatch = suggestionsRegex.exec(content);\r\n                const suggestions = suggestionsMatch ? suggestionsMatch[1].trim() : '';\r\n\r\n                // 提取关键问题\r\n                const keyIssues = [];\r\n                const issueKeywords = ['不足', '欠缺', '需要改进', '有待提高', '薄弱', '不够', '缺乏'];\r\n\r\n                dimensions.forEach(dimension => {\r\n                    issueKeywords.forEach(keyword => {\r\n                        const issueRegex = new RegExp(`(.*?${keyword}.*?)[。；]`, 'g');\r\n                        let issueMatch;\r\n\r\n                        while ((issueMatch = issueRegex.exec(dimension.analysis)) !== null) {\r\n                            keyIssues.push({\r\n                                dimension: dimension.title,\r\n                                issue: issueMatch[1].trim()\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n\r\n                // 生成HTML\r\n                let feedbackHtml = '<div class=\"feedback-summary\">';\r\n\r\n                if (overallAnalysis) {\r\n                    feedbackHtml += `<h4 class=\"summary-title\">综合评价</h4>`;\r\n                    feedbackHtml += `<p class=\"summary-content\">${overallAnalysis}</p>`;\r\n                }\r\n\r\n                if (keyIssues.length > 0) {\r\n                    feedbackHtml += `<h4 class=\"issues-title\">关键问题</h4>`;\r\n                    feedbackHtml += `<ul class=\"issues-list\">`;\r\n\r\n                    keyIssues.forEach(issue => {\r\n                        feedbackHtml += `<li><span class=\"issue-dimension\">${issue.dimension}：</span>${issue.issue}</li>`;\r\n                    });\r\n\r\n                    feedbackHtml += `</ul>`;\r\n                }\r\n\r\n                if (suggestions) {\r\n                    feedbackHtml += `<h4 class=\"suggestions-title\">改进建议</h4>`;\r\n\r\n                    // 尝试解析为列表\r\n                    if (suggestions.includes('；') || suggestions.includes('。')) {\r\n                        const suggestionItems = suggestions.split(/[；。]/).filter(item => item.trim() !== '');\r\n                        feedbackHtml += `<ul class=\"suggestions-list\">`;\r\n\r\n                        suggestionItems.forEach(item => {\r\n                            feedbackHtml += `<li>${item.trim()}</li>`;\r\n                        });\r\n\r\n                        feedbackHtml += `</ul>`;\r\n                    } else {\r\n                        feedbackHtml += `<p class=\"suggestions-content\">${suggestions}</p>`;\r\n                    }\r\n                }\r\n\r\n                feedbackHtml += `</div>`;\r\n\r\n                this.feedbackHtml = feedbackHtml;\r\n                console.log('生成的反馈HTML:', this.feedbackHtml);\r\n            } catch (error) {\r\n                console.error('生成反馈报告时出错:', error);\r\n                this.feedbackHtml = '<p>生成反馈报告时出错，请查看原始分析结果。</p>';\r\n            }\r\n        },\r\n\r\n        jumpToTest() {\r\n            this.$router.push('/three');\r\n        }\r\n    },\r\n    beforeDestroy() {\r\n        // 销毁图表以避免内存泄漏\r\n        if (this.radarChart) {\r\n            this.radarChart.destroy();\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 导航栏样式 */\r\n.nav-container {\r\n    background: #e3e9f3;\r\n    padding: 15px;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.header-section {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.title {\r\n    font-size: 28px;\r\n    color: #4CAF50;\r\n    margin: 0;\r\n    font-weight: 600;\r\n}\r\n\r\n.designer {\r\n    font-size: 14px;\r\n    color: #6c757d;\r\n    margin-top: 5px;\r\n    display: block;\r\n}\r\n\r\n.nav-menu {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 12px;\r\n    margin-bottom: 20px;\r\n    border-bottom: 1px solid #ddd;\r\n    padding-bottom: 10px;\r\n}\r\n\r\n.nav-item {\r\n    padding: 12px 22px;\r\n    border-radius: 8px;\r\n    font-size: 16px;\r\n    color: #333;\r\n    text-decoration: none;\r\n    transition: all 0.3s ease;\r\n    background: #f5f7fa;\r\n}\r\n\r\n.nav-item.active {\r\n    background: #409eff;\r\n    color: white;\r\n}\r\n\r\n.nav-item:hover:not(.active) {\r\n    background: #e6f7ff;\r\n}\r\n\r\n/* 容器样式 */\r\n.container {\r\n    padding: 40px 20px;\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n    background: #f8fafc;\r\n    border-radius: 16px;\r\n    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.05), 0 8px 10px -6px rgba(0, 0, 0, 0.02);\r\n    animation: fadeIn 0.5s ease-out;\r\n}\r\n\r\n@keyframes fadeIn {\r\n    from {\r\n        opacity: 0;\r\n        transform: translateY(10px);\r\n    }\r\n\r\n    to {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n    }\r\n}\r\n\r\n/* 按钮样式 */\r\n.button-group {\r\n    margin-bottom: 25px;\r\n    text-align: center;\r\n}\r\n\r\n.custom-btn {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 8px;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n    color: white;\r\n    background: #3b82f6;\r\n}\r\n\r\n.custom-btn:hover {\r\n    background: #2563eb;\r\n    transform: translateY(-2px);\r\n}\r\n\r\n#submitBtn {\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 8px;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n    color: white;\r\n    background: #10b981;\r\n}\r\n\r\n#submitBtn:hover {\r\n    background: #059669;\r\n    transform: translateY(-2px);\r\n}\r\n\r\n#submitBtn:disabled {\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n    transform: none;\r\n}\r\n\r\n/* 上传区域样式 */\r\n.image-upload {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin: 20px 0;\r\n}\r\n\r\n/* 自定义文件选择标签样式 */\r\n.file-label {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 10px 20px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    background: #f8fafc;\r\n    color: #334155;\r\n    transition: all 0.2s ease;\r\n}\r\n\r\n.file-label:hover {\r\n    background: #e2e8f0;\r\n}\r\n\r\n/* 隐藏原生文件输入框 */\r\ninput[type=\"file\"] {\r\n    display: none;\r\n}\r\n\r\n/* 图片预览区域样式 */\r\n.image-preview {\r\n    margin: 30px 0;\r\n    padding: 20px;\r\n    background: #fff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.preview-title {\r\n    text-align: center;\r\n    color: #334155;\r\n    margin-bottom: 15px;\r\n    font-size: 16px;\r\n}\r\n\r\n.preview-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n    border-radius: 8px;\r\n    max-width: 100%;\r\n    height: 300px;\r\n    /* 固定预览高度 */\r\n    background: #f8fafc;\r\n}\r\n\r\n.preview-image {\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n    object-fit: contain;\r\n    /* 保持图片比例 */\r\n}\r\n\r\n/* 进度条 */\r\n.progress {\r\n    text-align: center;\r\n    margin: 20px 0;\r\n    font-size: 14px;\r\n    color: #64748b;\r\n}\r\n\r\n/* 结果区域样式 */\r\n.result {\r\n    background: #fff;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\r\n    margin-top: 20px;\r\n}\r\n\r\n.result-header {\r\n    text-align: center;\r\n    margin-bottom: 25px;\r\n}\r\n\r\n.result-header h2 {\r\n    font-size: 22px;\r\n    color: #1e293b;\r\n    margin-bottom: 8px;\r\n}\r\n\r\n.result-subtitle {\r\n    font-size: 14px;\r\n    color: #64748b;\r\n}\r\n\r\n/* 雷达图容器样式 */\r\n.radar-chart-container {\r\n    margin-bottom: 30px;\r\n    padding: 15px;\r\n    background: #f8fafc;\r\n    border-radius: 8px;\r\n    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.chart-title {\r\n    font-size: 18px;\r\n    color: #334155;\r\n    text-align: center;\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.chart-wrapper {\r\n    width: 100%;\r\n    height: 300px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n/* 反馈容器样式 */\r\n.feedback-container {\r\n    margin-bottom: 30px;\r\n    padding: 15px;\r\n    background: #f8fafc;\r\n    border-radius: 8px;\r\n    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.feedback-title {\r\n    font-size: 18px;\r\n    color: #334155;\r\n    text-align: center;\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.feedback-summary {\r\n    background: #fff;\r\n    padding: 15px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.summary-title,\r\n.issues-title,\r\n.suggestions-title {\r\n    font-size: 16px;\r\n    color: #1e293b;\r\n    margin-top: 20px;\r\n    margin-bottom: 10px;\r\n    border-bottom: 1px solid #e2e8f0;\r\n    padding-bottom: 5px;\r\n}\r\n\r\n.summary-content {\r\n    color: #334155;\r\n    line-height: 1.6;\r\n}\r\n\r\n.issues-list,\r\n.suggestions-list {\r\n    list-style-type: none;\r\n    padding-left: 0;\r\n}\r\n\r\n.issues-list li {\r\n    margin-bottom: 8px;\r\n    padding-left: 25px;\r\n    position: relative;\r\n}\r\n\r\n.issues-list li::before {\r\n    content: \"•\";\r\n    color: #ef4444;\r\n    font-weight: bold;\r\n    display: inline-block;\r\n    width: 1em;\r\n    margin-left: -1em;\r\n    position: absolute;\r\n    left: 10px;\r\n}\r\n\r\n.issue-dimension {\r\n    font-weight: bold;\r\n    color: #3b82f6;\r\n}\r\n\r\n.suggestions-list li {\r\n    margin-bottom: 8px;\r\n    padding-left: 25px;\r\n    position: relative;\r\n}\r\n\r\n.suggestions-list li::before {\r\n    content: \"✓\";\r\n    color: #10b981;\r\n    font-weight: bold;\r\n    display: inline-block;\r\n    width: 1em;\r\n    margin-left: -1em;\r\n    position: absolute;\r\n    left: 10px;\r\n}\r\n\r\n.suggestions-content {\r\n    color: #334155;\r\n    line-height: 1.6;\r\n}\r\n\r\n/* 原始分析结果样式 */\r\n.original-analysis {\r\n    margin-top: 25px;\r\n    padding: 15px;\r\n    background: #f8fafc;\r\n    border-radius: 8px;\r\n    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.answer-content h2 {\r\n    color: #1e293b;\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n    font-size: 18px;\r\n}\r\n\r\n.answer-content p {\r\n    margin-bottom: 15px;\r\n    font-size: 15px;\r\n    color: #334155;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n    .nav-menu {\r\n        flex-wrap: wrap;\r\n    }\r\n\r\n    .nav-item {\r\n        padding: 8px 12px;\r\n        font-size: 14px;\r\n    }\r\n\r\n    .container {\r\n        padding: 25px 15px;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    .preview-container {\r\n        height: 200px;\r\n    }\r\n\r\n    .chart-wrapper {\r\n        height: 250px;\r\n    }\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./提交简历生成问题.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./提交简历生成问题.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./提交简历生成问题.vue?vue&type=template&id=6a815755&scoped=true\"\nimport script from \"./提交简历生成问题.vue?vue&type=script&lang=js\"\nexport * from \"./提交简历生成问题.vue?vue&type=script&lang=js\"\nimport style0 from \"./提交简历生成问题.vue?vue&type=style&index=0&id=6a815755&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6a815755\",\n  null\n  \n)\n\nexport default component.exports","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n"],"names":["render","_vm","this","_c","_self","staticClass","attrs","_v","ref","on","previewImage","isUploading","handleUpload","_s","previewUrl","_e","directives","name","rawName","value","showProgress","expression","progressText","showResult","_m","domProps","feedbackHtml","answerHtml","staticRenderFns","data","activeIndex","username","localStorage","getItem","answerContent","radarChart","skillData","专业知识水平","技能匹配度","语言表达能力","逻辑思维能力","创新能力与应变抗压能力","methods","handleSelect","index","console","log","removeItem","e","file","target","files","type","match","alert","reader","FileReader","onload","result","readAsDataURL","$refs","imageInput","imageBase64","convertFileToBase64","selectedCareer","question","analysisResponse","fetch","method","headers","body","JSON","stringify","image_base64","json","status","pollResult","request_id","error","message","requestId","resultResponse","content","parseMarkdownToHtml","extractSkillScores","createRadarChart","generateFeedback","setItem","jumpToTest","Promise","resolve","setTimeout","reject","split","onerror","markdown","html","replace","map","paragraph","trim","startsWith","join","key","toLowerCase","includes","calculateScore","dimension","dimensionText","positiveWords","negativeWords","score","forEach","word","Math","max","min","ctx","document","getElementById","getContext","destroy","labels","Object","keys","values","Chart","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","options","responsive","maintainAspectRatio","scales","r","angleLines","display","suggestedMin","suggestedMax","plugins","legend","position","tooltip","callbacks","context","raw","dimensionRegex","dimensions","exec","push","title","analysis","overallRegex","overallMatch","overallAnalysis","suggestionsRegex","suggestionsMatch","suggestions","keyIssues","issueKeywords","keyword","issueRegex","RegExp","issueMatch","issue","length","suggestionItems","filter","item","$router","beforeDestroy","component","register","registerables"],"sourceRoot":""}