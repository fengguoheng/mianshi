{"version":3,"file":"js/404.598868ff.js","mappings":"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","sources":["webpack://avatarvue2/./src/views/进行简历分析.vue","webpack://avatarvue2/src/views/进行简历分析.vue","webpack://avatarvue2/./src/views/进行简历分析.vue?cbf2","webpack://avatarvue2/./src/views/进行简历分析.vue?fdd8"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"button-group\"},[_c('button',{staticClass:\"custom-btn\",on:{\"click\":_vm.jumpToTest}},[_vm._v(\"去做题\")])]),_c('h1',[_vm._v(\"模拟面试\")]),_c('div',{staticClass:\"image-upload\"},[_c('input',{ref:\"imageInput\",attrs:{\"type\":\"file\",\"accept\":\"image/*\"}}),_c('button',{attrs:{\"id\":\"submitBtn\",\"disabled\":_vm.isUploading},on:{\"click\":_vm.handleUpload}},[_vm._v(\" \"+_vm._s(_vm.isUploading ? '上传中...' : '上传简历图片')+\" \")])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showProgress),expression:\"showProgress\"}],staticClass:\"progress\"},[_vm._v(_vm._s(_vm.progressText))]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showResult),expression:\"showResult\"}],staticClass:\"result\",domProps:{\"innerHTML\":_vm._s(_vm.answerHtml)}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"container\">\r\n    <div class=\"button-group\">\r\n      <button @click=\"jumpToTest\" class=\"custom-btn\">去做题</button>\r\n    </div>\r\n    <h1>模拟面试</h1>\r\n    <div class=\"image-upload\">\r\n      <input type=\"file\" ref=\"imageInput\" accept=\"image/*\">\r\n      <button @click=\"handleUpload\" id=\"submitBtn\" :disabled=\"isUploading\">\r\n        {{ isUploading ? '上传中...' : '上传简历图片' }}\r\n      </button>\r\n    </div>\r\n    <div v-show=\"showProgress\" class=\"progress\">{{ progressText }}</div>\r\n    <div v-html=\"answerHtml\" class=\"result\" v-show=\"showResult\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      isUploading: false,\r\n      showProgress: false,\r\n      showResult: false,\r\n      progressText: '',\r\n      answerContent: '',\r\n      answerHtml: ''\r\n    }\r\n  },\r\n  methods: {\r\n    async handleUpload() {\r\n      const file = this.$refs.imageInput.files[0];\r\n      if (!file) {\r\n        alert('请选择图片');\r\n        return;\r\n      }\r\n\r\n      this.isUploading = true;\r\n      this.showProgress = true;\r\n      this.progressText = '正在分析简历，请稍候...';\r\n\r\n      try {\r\n        const imageBase64 = await this.convertFileToBase64(file);\r\n        const question = '生成10道人工智能技术岗面试选择题，题目不要针对简历内容，而是针对人工智能技术岗';\r\n        \r\n        // 发送分析请求\r\n        const analysisResponse = await fetch('https://tender-secure-bluegill.ngrok-free.app/image-understanding', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ image_base64: imageBase64, question: question })\r\n        });\r\n        \r\n        const data = await analysisResponse.json();\r\n        \r\n        if (data.status === 'processing') {\r\n          await this.pollResult(data.request_id);\r\n        }\r\n      } catch (error) {\r\n        console.error('上传失败:', error);\r\n        this.progressText = '网络错误：' + error.message;\r\n      } finally {\r\n        this.isUploading = false;\r\n        this.showProgress = false;\r\n      }\r\n    },\r\n\r\n    async pollResult(requestId) {\r\n      try {\r\n        while (true) {\r\n          const resultResponse = await fetch(`https://tender-secure-bluegill.ngrok-free.app/get-result/${requestId}`);\r\n          const result = await resultResponse.json();\r\n\r\n          if (result.status === 'completed') {\r\n            this.answerContent = result.content || '暂无结果';\r\n            this.answerHtml = this.parseMarkdownToHtml(this.answerContent);\r\n            this.showResult = true;\r\n            \r\n            // 存储题目到localStorage\r\n            localStorage.setItem('question', this.answerContent);\r\n            this.jumpToTest();\r\n            return;\r\n          } else if (result.status === 'failed') {\r\n            this.answerHtml = '分析失败：' + (result.error || '未知错误');\r\n            this.showResult = true;\r\n            return;\r\n          }\r\n          \r\n          await new Promise(resolve => setTimeout(resolve, 3000));\r\n          this.progressText = '分析中，请稍候...';\r\n        }\r\n      } catch (error) {\r\n        console.error('轮询失败:', error);\r\n        this.answerHtml = '网络错误：' + error.message;\r\n        this.showResult = true;\r\n      }\r\n    },\r\n\r\n    convertFileToBase64(file) {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => resolve(e.target.result.split(',')[1]);\r\n        reader.onerror = (error) => reject(error);\r\n        reader.readAsDataURL(file);\r\n      });\r\n    },\r\n\r\n    parseMarkdownToHtml(markdown) {\r\n      if (!markdown) return '';\r\n      \r\n      let html = markdown\r\n        .replace(/\\*\\*(.*?)\\*\\*/g, '<h3>$1</h3>')\r\n        .replace(/^\\s*-\\s+(.*)$/gm, '<li>$1</li>')\r\n        .replace(/(<li>.*?<\\/li>)/gs, '<ul>$1</ul>')\r\n        .split('\\n\\n').map(paragraph => {\r\n          if (paragraph.trim().startsWith('<h3>') || paragraph.trim().startsWith('<ul>')) {\r\n            return paragraph;\r\n          }\r\n          return `<p>${paragraph.trim()}</p>`;\r\n        }).join('');\r\n        \r\n      return `<div class=\"answer-content\"><h2>面试者能力评估</h2>${html}</div>`;\r\n    },\r\n\r\n    jumpToTest() {\r\n      this.$router.push('/three');\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 保留原样式，scoped 确保样式仅作用于当前组件 */\r\n.container { \r\n    padding: 30px;\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n    background: #f8f9fa;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n/* 此处省略重复样式，可直接复制原HTML中的样式 */\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./进行简历分析.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./进行简历分析.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./进行简历分析.vue?vue&type=template&id=5ab2db23&scoped=true\"\nimport script from \"./进行简历分析.vue?vue&type=script&lang=js\"\nexport * from \"./进行简历分析.vue?vue&type=script&lang=js\"\nimport style0 from \"./进行简历分析.vue?vue&type=style&index=0&id=5ab2db23&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5ab2db23\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","on","jumpToTest","_v","ref","attrs","isUploading","handleUpload","_s","directives","name","rawName","value","showProgress","expression","progressText","showResult","domProps","answerHtml","staticRenderFns","data","answerContent","methods","file","$refs","imageInput","files","imageBase64","convertFileToBase64","question","analysisResponse","fetch","method","headers","body","JSON","stringify","image_base64","json","status","pollResult","request_id","error","console","message","alert","requestId","resultResponse","result","content","parseMarkdownToHtml","localStorage","setItem","Promise","resolve","setTimeout","reject","reader","FileReader","onload","e","target","split","onerror","readAsDataURL","markdown","html","replace","map","paragraph","trim","startsWith","join","$router","push","component"],"sourceRoot":""}