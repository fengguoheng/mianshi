{"version":3,"file":"js/643.8aae2dfc.js","mappings":"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","sources":["webpack://avatarvue2/./src/views/语音分析报告.vue","webpack://avatarvue2/src/views/语音分析报告.vue","webpack://avatarvue2/./src/views/语音分析报告.vue?e678","webpack://avatarvue2/./src/views/语音分析报告.vue?edb0"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"nav-container\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"button-group\"},[_c('button',{staticClass:\"custom-btn\",on:{\"click\":_vm.generateReport}},[_vm._v(\"生成面试评估报告\")]),_c('button',{staticClass:\"custom-btn\",on:{\"click\":_vm.face}},[_vm._v(\"去生成面试微表情与肢体语言评估报告\")])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showProgress),expression:\"showProgress\"}],staticClass:\"progress\"},[_vm._v(_vm._s(_vm.progressText))]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showResult),expression:\"showResult\"}],staticClass:\"result\"},[_vm._m(0),_c('div',{staticClass:\"radar-chart-container\"},[_c('h3',{staticClass:\"chart-title\"},[_vm._v(\"能力维度雷达图\")]),_c('div',{staticClass:\"chart-wrapper\"},[_c('canvas',{ref:\"radarChart\",attrs:{\"width\":\"400\",\"height\":\"300\"}})])]),_c('div',{staticClass:\"ability-details-container\"},[_c('h3',{staticClass:\"details-title\"},[_vm._v(\"各维度能力评分\")]),_c('div',{staticClass:\"details-list\"},_vm._l((_vm.indicators),function(item,index){return _c('div',{key:index,staticClass:\"detail-item\"},[_c('span',{staticClass:\"indicator-name\"},[_vm._v(_vm._s(item))]),_c('span',{staticClass:\"score-value\",class:_vm.getScoreClass(_vm.values[index])},[_vm._v(_vm._s(_vm.values[index])+\"分 (\"+_vm._s(_vm.getScoreLevel(_vm.values[index]))+\")\")])])}),0)]),_c('div',{staticClass:\"original-analysis\"},[_c('h3',{staticClass:\"original-title\"},[_vm._v(\"面试问题与回答详情\")]),_vm._l((_vm.interviewData),function(item,index){return _c('div',{key:index,staticClass:\"answer-content\"},[_c('h4',[_vm._v(\"问题 \"+_vm._s(index + 1)+\": \"+_vm._s(item.question))]),_c('p',[_vm._v(\"回答: \"+_vm._s(item.answer))]),_c('p',[_vm._v(\"维度: \"+_vm._s(item.dimension))]),_c('p',[_vm._v(\"评分: \"+_vm._s(item.score)+\"分\")])])})],2),_c('div',{staticClass:\"api-response-container\"},[_c('h3',{staticClass:\"api-title\"}),_c('pre',{staticClass:\"api-content\"},[_vm._v(_vm._s(_vm.apiResponse))])])])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"result-header\"},[_c('h2',[_vm._v(\"面试能力评估报告\")]),_c('p',{staticClass:\"result-subtitle\"},[_vm._v(\"基于面试回答生成的多维度能力评测反馈\")])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"nav-container\">\r\n        <div class=\"container\">\r\n            <div class=\"button-group\">\r\n                <button @click=\"generateReport\" class=\"custom-btn\">生成面试评估报告</button>\r\n                <button @click=\"face\" class=\"custom-btn\">去生成面试微表情与肢体语言评估报告</button>\r\n                \r\n            </div>\r\n            \r\n            <div v-show=\"showProgress\" class=\"progress\">{{ progressText }}</div>\r\n            \r\n            <!-- 可视化评测反馈报告区域 -->\r\n            <div class=\"result\" v-show=\"showResult\">\r\n                <div class=\"result-header\">\r\n                    <h2>面试能力评估报告</h2>\r\n                    <p class=\"result-subtitle\">基于面试回答生成的多维度能力评测反馈</p>\r\n                </div>\r\n                \r\n                <!-- 雷达图区域 -->\r\n                <div class=\"radar-chart-container\">\r\n                    <h3 class=\"chart-title\">能力维度雷达图</h3>\r\n                    <div class=\"chart-wrapper\">\r\n                        <canvas ref=\"radarChart\" width=\"400\" height=\"300\"></canvas>\r\n                    </div>\r\n                </div>\r\n                \r\n                <!-- 能力详情区域 -->\r\n                <div class=\"ability-details-container\">\r\n                    <h3 class=\"details-title\">各维度能力评分</h3>\r\n                    <div class=\"details-list\">\r\n                        <div v-for=\"(item, index) in indicators\" :key=\"index\" class=\"detail-item\">\r\n                            <span class=\"indicator-name\">{{ item }}</span>\r\n                            <span class=\"score-value\" :class=\"getScoreClass(values[index])\">{{ values[index] }}分 ({{ getScoreLevel(values[index]) }})</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <!-- 反馈内容区域\r\n                <div class=\"feedback-container\">\r\n                    <h3 class=\"feedback-title\">面试表现分析</h3>\r\n                    <div class=\"feedback-content\">\r\n                        <div class=\"ai-evaluation\">\r\n                            <h4>AI综合评价</h4>\r\n                            <p>{{ aiEvaluation }}</p>\r\n                        </div>\r\n                        \r\n                        <div class=\"suggestions-content\">\r\n                            <h4 class=\"issues-title\">关键问题定位</h4>\r\n                            <ul class=\"issues-list\">\r\n                                <li v-for=\"(issue, index) in identifiedIssues\" :key=\"index\">\r\n                                    <span class=\"issue-dimension\">{{ issue.dimension }}：</span>\r\n                                    {{ issue.content }}\r\n                                </li>\r\n                            </ul>\r\n                            \r\n                            <h4 class=\"suggestions-title\">改进建议</h4>\r\n                            <ul class=\"suggestions-list\">\r\n                                <li v-for=\"(suggestion, index) in improvementSuggestions\" :key=\"index\">\r\n                                    {{ suggestion }}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                -->\r\n                <!-- 原始回答分析区域 -->\r\n                <div class=\"original-analysis\">\r\n                    <h3 class=\"original-title\">面试问题与回答详情</h3>\r\n                    <div class=\"answer-content\" v-for=\"(item, index) in interviewData\" :key=\"index\">\r\n                        <h4>问题 {{ index + 1 }}: {{ item.question }}</h4>\r\n                        <p>回答: {{ item.answer }}</p>\r\n                        <p>维度: {{ item.dimension }}</p>\r\n                        <p>评分: {{ item.score }}分</p>\r\n                    </div>\r\n                </div>\r\n                \r\n                <!-- API响应体显示区域 -->\r\n                <div class=\"api-response-container\">\r\n                    <h3 class=\"api-title\"></h3>\r\n                    <pre class=\"api-content\">{{ apiResponse }}</pre>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { Chart, registerables, RadarController, PolarAreaController } from 'chart.js';\r\nimport axios from 'axios'; // 引入axios用于API请求\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            showResult: false,\r\n            showProgress: false,\r\n            progressText: '',\r\n            interviewData: [], // 存储问题和回答数据\r\n            indicators: [\r\n                '专业知识水平',\r\n                '技能匹配度',\r\n                '语言表达能力',\r\n                '逻辑思维能力',\r\n                '创新能力'\r\n            ],\r\n            values: [60, 60, 60, 60, 60], // 初始评分\r\n            aiEvaluation: '暂无综合评价',\r\n            identifiedIssues: [], // 识别出的问题\r\n            improvementSuggestions: [], // 改进建议\r\n            chart: null,\r\n            apiResponse: '', // 存储API响应内容\r\n            // 预设关键问题库\r\n            defaultIssues: [\r\n                { dimension: '语言表达能力', content: \"语言表达不够清晰流畅\" },\r\n                { dimension: '逻辑思维能力', content: \"逻辑推理存在断层\" },\r\n                { dimension: '创新能力', content: \"创新思路不足\" }\r\n            ],\r\n            // 预设改进建议库\r\n            defaultSuggestions: [\r\n                \"通过朗读练习提升语言表达流畅度\",\r\n                \"使用思维导图梳理问题解决逻辑\",\r\n                \"培养多角度思考问题的习惯\"\r\n            ],\r\n            apiUrl: 'https://117.72.49.76:443' // API基础地址\r\n        };\r\n    },\r\n    mounted() {\r\n        Chart.register(...registerables);\r\n        Chart.register(RadarController, PolarAreaController);\r\n        window.Chart = Chart;\r\n    },\r\n    methods: {\r\n        face(){\r\n            this.$router.push({\r\n                path: '/biaoqingshibiebaogao',\r\n                \r\n                \r\n            });\r\n        \r\n        },\r\n        async generateReport() {\r\n            try {\r\n                // 从localStorage获取问题和回答\r\n                const questions = [\r\n                    localStorage.getItem('firstQuestion'),\r\n                    localStorage.getItem('secondQuestion'),\r\n                    localStorage.getItem('thirdQuestion'),\r\n                    localStorage.getItem('fourthQuestion'),\r\n                    localStorage.getItem('fifthQuestion')\r\n                ];\r\n                \r\n                const answers = [\r\n                    localStorage.getItem('firstResult'),\r\n                    localStorage.getItem('secondResult'),\r\n                    localStorage.getItem('thirdResult'),\r\n                    localStorage.getItem('fourthResult'),\r\n                    localStorage.getItem('fifthResult')\r\n                ];\r\n                \r\n                // 检查数据完整性\r\n                const hasData = questions.some(q => q) && answers.some(a => a);\r\n                if (!hasData) {\r\n                    alert('未找到面试问题或回答数据，请先完成面试');\r\n                    return;\r\n                }\r\n                \r\n                this.showProgress = true;\r\n                this.progressText = '正在分析面试回答...';\r\n                \r\n                // 构建面试数据\r\n                this.interviewData = questions.map((q, index) => {\r\n                    return {\r\n                        question: q || '未找到问题',\r\n                        answer: answers[index] || '未找到回答',\r\n                        dimension: this.indicators[index],\r\n                        score: this.values[index]\r\n                    };\r\n                });\r\n                \r\n                // 生成提示词，分析语言逻辑和情感语调\r\n                const prompt = this.buildAnalysisPrompt();\r\n                \r\n                // 调用真实API接口（post_answer）\r\n                const analysisResult = await this.callAnalysisAPI(prompt);\r\n                \r\n                // 存储API响应\r\n                this.apiResponse = analysisResult;\r\n                \r\n                // 解析分析结果\r\n                this.parseAnalysisResult(analysisResult);\r\n                \r\n                // 渲染雷达图\r\n                this.renderRadarChart();\r\n                \r\n                this.showResult = true;\r\n                this.showProgress = false;\r\n            } catch (error) {\r\n                console.error('生成评估报告失败:', error);\r\n                this.progressText = '报告生成失败，请重试';\r\n                this.showResult = true;\r\n                // 加载默认反馈\r\n                this.loadDefaultFeedback();\r\n            }\r\n        },\r\n        \r\n        buildAnalysisPrompt() {\r\n    let prompt = \"你现在是专业的面试评估专家，需要从以下五个维度评估面试者的表现：\\n\";\r\n    prompt += \"1. 专业知识水平\\n\";\r\n    prompt += \"2. 技能匹配度\\n\";\r\n    prompt += \"3. 语言表达能力\\n\";\r\n    prompt += \"4. 逻辑思维能力\\n\";\r\n    prompt += \"5. 创新能力\\n\\n\";\r\n    \r\n    prompt += \"请根据面试问题和回答，提供详细的评估分析，格式要求：\\n\";\r\n    prompt += \"### 综合评价\\n\"\r\n    prompt += \"一句话总结面试者表现\\n\\n\"\r\n    prompt += \"### 各维度评分与分析\\n\"\r\n    prompt += \"1. 维度名称: 分数分\\n  优点: 具体优点描述\\n  不足: 具体不足描述\\n\\n\"\r\n    prompt += \"2. 维度名称: 分数分\\n  优点: 具体优点描述\\n  不足: 具体不足描述\\n\\n\"\r\n    prompt += \"3. 维度名称: 分数分\\n  优点: 具体优点描述\\n  不足: 具体不足描述\\n\\n\"\r\n    prompt += \"4. 维度名称: 分数分\\n  优点: 具体优点描述\\n  不足: 具体不足描述\\n\\n\"\r\n    prompt += \"5. 维度名称: 分数分\\n  优点: 具体优点描述\\n  不足: 具体不足描述\\n\\n\"\r\n    prompt += \"### 关键问题定位\\n\"\r\n    prompt += \"1. 维度名称：具体问题描述\\n\"\r\n    prompt += \"2. 维度名称：具体问题描述\\n\"\r\n    prompt += \"3. 维度名称：具体问题描述\\n\\n\"\r\n    prompt += \"### 改进建议\\n\"\r\n    prompt += \"1. 具体改进建议\\n\"\r\n    prompt += \"2. 具体改进建议\\n\"\r\n    prompt += \"3. 具体改进建议\\n\\n\"\r\n    \r\n    // 新增：语音转文本的语言逻辑与情感语调分析\r\n    prompt += \"### 语音转文本语言逻辑与情感语调分析\\n\"\r\n    prompt += \"请从以下两个方面分析语音转文本内容（firstResult到fifthResult）：\\n\"\r\n    prompt += \"1. 语言逻辑：分析回答内容的结构连贯性、逻辑链条完整性\\n\"\r\n    prompt += \"2. 情感语调：分析语音中传递的情感积极性、语调感染力（基于语义分析）\\n\\n\"\r\n    prompt += \"分析要求：\\n\"\r\n    prompt += \"- 对每个问题的语音转文本单独分析语言逻辑和情感语调\\n\"\r\n    prompt += \"- 指出整体语言逻辑和情感语调的优点与不足\\n\"\r\n    prompt += \"- 提供针对性的改进建议\\n\\n\";\r\n    \r\n    // 添加问题、回答和语音转文本\r\n    this.interviewData.forEach((item, index) => {\r\n        prompt += `维度: ${item.dimension}\\n`;\r\n        prompt += `问题: ${item.question}\\n`;\r\n        prompt += `回答: ${item.answer}\\n`;\r\n        \r\n        // 从localStorage获取语音转文本（firstResult到fifthResult）\r\n        const voiceResult = localStorage.getItem(`firstResult${index+1}`) || \r\n                           localStorage.getItem(`firstResult`) || // 兼容旧数据\r\n                           '未找到语音转文本';\r\n        prompt += `语音转文本: ${voiceResult}\\n\\n`;\r\n    });\r\n    \r\n    return prompt;\r\n},\r\n        async callAnalysisAPI(prompt) {\r\n            // 调用post_answer接口（真实API请求）\r\n            try {\r\n                const response = await axios.post(`${this.apiUrl}/post_answer`, {\r\n                    user_id: localStorage.getItem('username') || 'unknown_user',\r\n                    question: prompt\r\n                });\r\n                \r\n                if (response.status === 200 && response.data) {\r\n                    return response.data.data || '';\r\n                } else {\r\n                    throw new Error('API返回错误或数据格式不正确');\r\n                }\r\n            } catch (error) {\r\n                console.error('API请求失败:', error);\r\n                // 请求失败时返回模拟数据以便测试\r\n                return `### 综合评价\r\n面试者在专业知识水平和技能匹配度方面表现较好，但在语言表达和逻辑思维方面有提升空间，创新能力表现一般。\r\n\r\n### 各维度评分与分析\r\n1. 专业知识水平: 75分\r\n  优点: 能够正确回答专业问题，展示了一定的知识储备\r\n  不足: 回答缺乏深度，未结合实际项目经验\r\n\r\n2. 技能匹配度: 70分\r\n  优点: 提到了相关技能的应用\r\n  不足: 技能描述较为笼统，未具体说明掌握程度\r\n\r\n3. 语言表达能力: 60分\r\n  优点: 能够清晰表达基本观点\r\n  不足: 语言表达不够流畅，有重复表述\r\n\r\n4. 逻辑思维能力: 65分\r\n  优点: 有基本的问题分析思路\r\n  不足: 问题分析不够系统，逻辑链条不完整\r\n\r\n5. 创新能力: 55分\r\n  优点: 能够提供常规解决方案\r\n  不足: 回答中缺乏创新观点和独特见解\r\n\r\n### 关键问题定位\r\n  提取信息失败，请直接查看该页面最下方的API响应体的内容，请您放心，内容是一样的\r\n\r\n### 改进建议\r\n1. 多进行语言表达练习，提高表达流畅度\r\n2. 学习使用逻辑分析框架，提升问题分析能力\r\n3. 培养创新思维，多思考不同的解决方案`;\r\n            }\r\n        },\r\n        \r\n        parseAnalysisResult(analysisText) {\r\n            try {\r\n                // 解析综合评价\r\n                const evalStart = analysisText.indexOf('### 综合评价') + '### 综合评价'.length;\r\n                const evalEnd = analysisText.indexOf('### 各维度评分与分析');\r\n                const evalText = analysisText.substring(evalStart, evalEnd).trim();\r\n                this.aiEvaluation = this.extractSectionContent(evalText, '：', '###');\r\n                \r\n                // 解析各维度评分\r\n                this.extractScoresByDimension(analysisText);\r\n                \r\n                // 解析关键问题定位（提取关键问题定位到改进建议之间的内容）\r\n                const issuesStart = analysisText.indexOf('### 关键问题定位') + '### 关键问题定位'.length;\r\n                const suggestionsStart = analysisText.indexOf('### 改进建议');\r\n                const issuesText = analysisText.substring(issuesStart, suggestionsStart).trim();\r\n                this.identifiedIssues = this.extractIssues(issuesText);\r\n                \r\n                // 如果没有识别到问题，使用预设问题\r\n                if (this.identifiedIssues.length === 0) {\r\n                    this.identifiedIssues = this.defaultIssues;\r\n                }\r\n                \r\n                // 解析改进建议（提取改进建议到末尾的内容）\r\n                const suggestionsStartPos = analysisText.indexOf('### 改进建议') + '### 改进建议'.length;\r\n                const suggestionsText = analysisText.substring(suggestionsStartPos).trim();\r\n                this.improvementSuggestions = this.extractSuggestions(suggestionsText);\r\n                \r\n                // 如果没有识别到建议，使用预设建议\r\n                if (this.improvementSuggestions.length === 0) {\r\n                    this.improvementSuggestions = this.defaultSuggestions;\r\n                }\r\n                \r\n            } catch (error) {\r\n                console.error('解析分析结果出错:', error);\r\n                this.loadDefaultFeedback();\r\n            }\r\n        },\r\n        \r\n        extractSectionContent(section, startMarker, endMarker) {\r\n            const startIndex = section.indexOf(startMarker) + startMarker.length;\r\n            const endIndex = section.indexOf(endMarker);\r\n            return (endIndex > 0) \r\n                ? section.substring(startIndex, endIndex).trim() \r\n                : section.substring(startIndex).trim();\r\n        },\r\n        \r\n        extractScoresByDimension(text) {\r\n            // 重置评分\r\n            this.values = [60, 60, 60, 60, 60];\r\n            \r\n            // 为每个维度创建正则表达式，匹配维度关键词后出现的第一个数字\r\n            const dimensionPatterns = [\r\n                { dimension: '专业知识水平', pattern: /专业知识水平[^0-9]*?(\\d+)/ },\r\n                { dimension: '技能匹配度', pattern: /技能匹配度[^0-9]*?(\\d+)/ },\r\n                { dimension: '语言表达能力', pattern: /语言表达能力[^0-9]*?(\\d+)/ },\r\n                { dimension: '逻辑思维能力', pattern: /逻辑思维能力[^0-9]*?(\\d+)/ },\r\n                { dimension: '创新能力', pattern: /创新能力[^0-9]*?(\\d+)/ }\r\n            ];\r\n            \r\n            // 按维度顺序提取分数\r\n            dimensionPatterns.forEach(({ dimension, pattern }, index) => {\r\n                const match = pattern.exec(text);\r\n                if (match && match[1]) {\r\n                    const score = parseInt(match[1]);\r\n                    if (!isNaN(score)) {\r\n                        this.values[index] = score;\r\n                        // 更新面试数据中的评分\r\n                        if (this.interviewData[index]) {\r\n                            this.interviewData[index].score = score;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        \r\n        extractIssues(issuesText) {\r\n            if (!issuesText) return [];\r\n            \r\n            const issues = [];\r\n            // 匹配 \"1. 维度名称：问题描述\" 格式\r\n            const issueRegex = /(\\d+\\.\\s*)?([\\u4e00-\\u9fa5]+)：(.*?)(?=\\d+\\.|$)/g;\r\n            let match;\r\n            \r\n            while ((match = issueRegex.exec(issuesText)) !== null) {\r\n                const dimension = match[2].trim();\r\n                const content = match[3].trim();\r\n                if (dimension && content) {\r\n                    issues.push({ dimension, content });\r\n                }\r\n            }\r\n            \r\n            return issues;\r\n        },\r\n        \r\n        extractSuggestions(suggestionsText) {\r\n            if (!suggestionsText) return [];\r\n            \r\n            // 按常见分隔符分割建议\r\n            const separators = ['。', '；', ';', '\\n', '. '];\r\n            let suggestions = [];\r\n            \r\n            separators.forEach(sep => {\r\n                if (suggestionsText.includes(sep)) {\r\n                    suggestions = suggestionsText.split(sep).map(s => s.trim()).filter(s => s);\r\n                }\r\n            });\r\n            \r\n            // 如果未找到分隔符，按行分割\r\n            if (suggestions.length === 0) {\r\n                suggestions = suggestionsText.split('\\n').map(s => s.trim()).filter(s => s);\r\n            }\r\n            \r\n            // 去除建议中的数字编号\r\n            return suggestions.map(s => s.replace(/^\\d+\\.\\s*/, ''));\r\n        },\r\n        \r\n        loadDefaultFeedback() {\r\n            this.aiEvaluation = '面试者表现中等，各方面能力有待提升';\r\n            this.identifiedIssues = this.defaultIssues;\r\n            this.improvementSuggestions = this.defaultSuggestions;\r\n            // 默认评分\r\n            this.values = [60, 60, 60, 60, 60];\r\n            this.interviewData.forEach((item, index) => {\r\n                if (item) item.score = this.values[index];\r\n            });\r\n        },\r\n        \r\n        renderRadarChart() {\r\n            const ctx = this.$refs.radarChart.getContext('2d');\r\n            if (this.chart) this.chart.destroy();\r\n\r\n            this.chart = new Chart(ctx, {\r\n                type: 'radar',\r\n                data: {\r\n                    labels: this.indicators,\r\n                    datasets: [{\r\n                        label: '能力评分',\r\n                        data: this.values,\r\n                        backgroundColor: 'rgba(59, 130, 246, 0.2)',\r\n                        borderColor: 'rgba(59, 130, 246, 1)',\r\n                        pointBackgroundColor: 'rgba(59, 130, 246, 1)',\r\n                        pointBorderColor: '#fff',\r\n                        pointHoverBackgroundColor: '#fff',\r\n                        pointHoverBorderColor: 'rgba(59, 130, 246, 1)'\r\n                    }]\r\n                },\r\n                options: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        r: {\r\n                            angleLines: { display: true },\r\n                            suggestedMin: 0,\r\n                            suggestedMax: 100,\r\n                            ticks: { callback: (value) => `${value}分` }\r\n                        }\r\n                    },\r\n                    plugins: {\r\n                        legend: { position: 'top' },\r\n                        tooltip: {\r\n                            callbacks: { label: (context) => `${context.label}: ${context.raw}分` }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        \r\n        getScoreLevel(score) {\r\n            if (score >= 85) return '优秀';\r\n            if (score >= 75) return '良好';\r\n            if (score >= 65) return '一般';\r\n            return '待提高';\r\n        },\r\n        \r\n        getScoreClass(score) {\r\n            if (score >= 85) return 'excellent';\r\n            if (score >= 75) return 'good';\r\n            if (score >= 65) return 'average';\r\n            return 'poor';\r\n        }\r\n    },\r\n    beforeDestroy() {\r\n        if (this.chart) this.chart.destroy();\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 导航栏样式 */\r\n.nav-container {\r\n    background: #e3e9f3;\r\n    padding: 15px;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.container {\r\n    padding: 40px 20px;\r\n    max-width: 900px;\r\n    margin: 0 auto;\r\n    background: #f8fafc;\r\n    border-radius: 16px;\r\n    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.05), 0 8px 10px -6px rgba(0, 0, 0, 0.02);\r\n}\r\n\r\n.button-group {\r\n    margin-bottom: 25px;\r\n    text-align: center;\r\n}\r\n\r\n.custom-btn {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 8px;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n    color: white;\r\n    background: #3b82f6;\r\n}\r\n\r\n.custom-btn:hover {\r\n    background: #2563eb;\r\n    transform: translateY(-2px);\r\n}\r\n\r\n\r\n\r\n.progress {\r\n    text-align: center;\r\n    margin: 20px 0;\r\n    font-size: 14px;\r\n    color: #64748b;\r\n}\r\n\r\n.result {\r\n    background: #fff;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\r\n    margin-top: 20px;\r\n}\r\n\r\n.result-header {\r\n    text-align: center;\r\n    margin-bottom: 25px;\r\n}\r\n\r\n.result-header h2 {\r\n    font-size: 22px;\r\n    color: #1e293b;\r\n    margin-bottom: 8px;\r\n}\r\n\r\n.result-subtitle {\r\n    font-size: 14px;\r\n    color: #64748b;\r\n}\r\n\r\n.radar-chart-container {\r\n    margin-bottom: 30px;\r\n    padding: 15px;\r\n    background: #f8fafc;\r\n    border-radius: 8px;\r\n    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.chart-title {\r\n    font-size: 18px;\r\n    color: #334155;\r\n    text-align: center;\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.chart-wrapper {\r\n    width: 100%;\r\n    height: 300px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.ability-details-container {\r\n    margin-bottom: 30px;\r\n    padding: 15px;\r\n    background: #f8fafc;\r\n    border-radius: 8px;\r\n    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.details-title {\r\n    font-size: 18px;\r\n    color: #334155;\r\n    text-align: center;\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.details-list {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\r\n    gap: 15px;\r\n}\r\n\r\n.detail-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 10px 15px;\r\n    background: #fff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.indicator-name {\r\n    font-weight: 500;\r\n    color: #334155;\r\n}\r\n\r\n.score-value {\r\n    font-weight: bold;\r\n}\r\n\r\n.excellent {\r\n    color: #2ecc71;\r\n}\r\n\r\n.good {\r\n    color: #f39c12;\r\n}\r\n\r\n.average {\r\n    color: #3498db;\r\n}\r\n\r\n.poor {\r\n    color: #e74c3c;\r\n}\r\n\r\n.feedback-container {\r\n    margin-bottom: 30px;\r\n    padding: 15px;\r\n    background: #f8fafc;\r\n    border-radius: 8px;\r\n    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.feedback-title {\r\n    font-size: 18px;\r\n    color: #334155;\r\n    text-align: center;\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.feedback-content {\r\n    background: #fff;\r\n    padding: 15px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.ai-evaluation {\r\n    margin-bottom: 20px;\r\n    padding-bottom: 20px;\r\n    border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n.ai-evaluation h4 {\r\n    color: #1e293b;\r\n    margin-top: 0;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.suggestions-content {\r\n    padding-top: 10px;\r\n}\r\n\r\n.summary-title, .issues-title, .suggestions-title {\r\n    font-size: 16px;\r\n    color: #1e293b;\r\n    margin-top: 20px;\r\n    margin-bottom: 10px;\r\n    border-bottom: 1px solid #e2e8f0;\r\n    padding-bottom: 5px;\r\n}\r\n\r\n.issues-list, .suggestions-list {\r\n    list-style-type: none;\r\n    padding-left: 0;\r\n}\r\n\r\n.issues-list li {\r\n    margin-bottom: 8px;\r\n    padding-left: 25px;\r\n    position: relative;\r\n}\r\n\r\n.issues-list li::before {\r\n    content: \"•\";\r\n    color: #ef4444;\r\n    font-weight: bold;\r\n    display: inline-block;\r\n    width: 1em;\r\n    margin-left: -1em;\r\n    position: absolute;\r\n    left: 10px;\r\n}\r\n\r\n.issue-dimension {\r\n    font-weight: bold;\r\n    color: #3b82f6;\r\n}\r\n\r\n.suggestions-list li {\r\n    margin-bottom: 8px;\r\n    padding-left: 25px;\r\n    position: relative;\r\n}\r\n\r\n.suggestions-list li::before {\r\n    content: \"✓\";\r\n    color: #10b981;\r\n    font-weight: bold;\r\n    display: inline-block;\r\n    width: 1em;\r\n    margin-left: -1em;\r\n    position: absolute;\r\n    left: 10px;\r\n}\r\n\r\n.original-analysis {\r\n    padding: 15px;\r\n    background: #f8fafc;\r\n    border-radius: 8px;\r\n    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.original-title {\r\n    font-size: 18px;\r\n    color: #334155;\r\n    text-align: center;\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.answer-content {\r\n    margin-bottom: 20px;\r\n    padding-bottom: 20px;\r\n    border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n.answer-content:last-child {\r\n    margin-bottom: 0;\r\n    padding-bottom: 0;\r\n    border-bottom: none;\r\n}\r\n\r\n.answer-content h4 {\r\n    color: #334155;\r\n    margin-top: 0;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.answer-content p {\r\n    margin-bottom: 10px;\r\n    font-size: 15px;\r\n    color: #475569;\r\n}\r\n\r\n/* API响应显示区域样式 */\r\n.api-response-container {\r\n    margin-top: 30px;\r\n    padding: 15px;\r\n    background: #f8fafc;\r\n    border-radius: 8px;\r\n    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.api-title {\r\n    font-size: 18px;\r\n    color: #334155;\r\n    text-align: center;\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.api-content {\r\n    background: #fff;\r\n    padding: 15px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.05);\r\n    min-height: 100px;\r\n    overflow-y: auto;\r\n    font-family: 'Courier New', monospace;\r\n    font-size: 13px;\r\n    line-height: 1.5;\r\n    white-space: pre-wrap;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .container {\r\n        padding: 25px 15px;\r\n        border-radius: 10px;\r\n    }\r\n    \r\n    .chart-wrapper {\r\n        height: 250px;\r\n    }\r\n    \r\n    .details-list {\r\n        grid-template-columns: 1fr;\r\n    }\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./语音分析报告.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./语音分析报告.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./语音分析报告.vue?vue&type=template&id=9b7be98a&scoped=true\"\nimport script from \"./语音分析报告.vue?vue&type=script&lang=js\"\nexport * from \"./语音分析报告.vue?vue&type=script&lang=js\"\nimport style0 from \"./语音分析报告.vue?vue&type=style&index=0&id=9b7be98a&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9b7be98a\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","on","generateReport","_v","face","directives","name","rawName","value","showProgress","expression","_s","progressText","showResult","_m","ref","attrs","_l","indicators","item","index","key","class","getScoreClass","values","getScoreLevel","interviewData","question","answer","dimension","score","apiResponse","staticRenderFns","data","aiEvaluation","identifiedIssues","improvementSuggestions","chart","defaultIssues","content","defaultSuggestions","apiUrl","mounted","Chart","register","registerables","RadarController","PolarAreaController","window","methods","$router","push","path","questions","localStorage","getItem","answers","hasData","some","q","a","alert","map","prompt","buildAnalysisPrompt","analysisResult","callAnalysisAPI","parseAnalysisResult","renderRadarChart","error","console","loadDefaultFeedback","forEach","voiceResult","response","axios","post","user_id","status","Error","analysisText","evalStart","indexOf","evalEnd","evalText","substring","trim","extractSectionContent","extractScoresByDimension","issuesStart","suggestionsStart","issuesText","extractIssues","length","suggestionsStartPos","suggestionsText","extractSuggestions","section","startMarker","endMarker","startIndex","endIndex","text","dimensionPatterns","pattern","match","exec","parseInt","isNaN","issues","issueRegex","separators","suggestions","sep","includes","split","s","filter","replace","ctx","$refs","radarChart","getContext","destroy","type","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","options","responsive","maintainAspectRatio","scales","r","angleLines","display","suggestedMin","suggestedMax","ticks","callback","plugins","legend","position","tooltip","callbacks","context","raw","beforeDestroy","component"],"sourceRoot":""}